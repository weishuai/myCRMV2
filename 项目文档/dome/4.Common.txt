nestjs 内置装饰器的时候必须得在@nestjs/common 模块下面引入对应的装饰器

import { Controller, Get, Post } from '@nestjs/common'; 
@Controller('cats') 
export class CatsController { 
    @Post() 
    create(): string { 
        return 'This action adds a new cat'; 
    } 
    @Get() 
    findAll(): string { 
        return 'This action returns all cats'; 
    } 
}

Nestjs 也提供了其他 HTTP 请求方法的装饰器 @Put() 、@Delete()、@Patch()、 @Options()、 @Head()和 @All()

@Request() req 
@Response() res 
@Next() next 
@Session() req.session 
@Param(key?: string) req.params / req.params[key] 
@Body(key?: string) req.body / req.body[key] 
@Query(key?: string) req.query / req.query[key] 
@Headers(name?: string) req.headers / req.headers[name]


import { Controller, Get, Post,Query,Body } from '@nestjs/common'; 
@Controller('news') 
export class NewsController { 
    @Get() 
    getAbout(@Query() query): string { 
        console.log(query); 
        //这里获取的就是所有的 Get 传值 
        return '这是 about'
    }

    //针对参数是 localhost:3000/news/list?id=zq&age=12
    @Get('list') 
    getNews(@Query('id') id):string { 
        console.log(id); 
        //这里获取的就是 Get 传值里面的 Id 的值 
        //如果@Query()则是整个id=zq&age=12的对象
        return '这是新闻' 
    }
    @Post('doAdd') 
    async addNews(@Body() newsData){ 
        console.log(newsData); 
        return '增加新闻’'
    } 
}


// 针对的参数是 /name/id这种类型，例如/name/1
@Get(':id') 
findOne(@Param() params): string { 
    console.log(params.id); 
    return `This action returns a #${params.id} cat`; 
}

补充： 
@Param() 装饰器访问以这种方式声明的路由参数，该装饰器应添 加到函数签名中。
@Param可以用在get或者post，但是都是针对 localhost:3000/news/list?id=zq&age=12这种才可以获取，
而针对body内部都是获取不到的，可以使用@Body


